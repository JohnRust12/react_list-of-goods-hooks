{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","listOfGoods","goods","visibleGoods","console","log","sort","a","b","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","shouldShowResetButton","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAiBKA,E,0EAZQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAEGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkDE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAzCD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAGNI,EAAY,YAAOD,GAwBzB,OApBAE,QAAQC,IAAIR,EAAUE,GAEtBI,EAAaG,MAAK,SAACC,EAAGC,GACpB,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAEG,cAAcF,GAEzB,KAAKhB,EAASmB,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,KAAKpB,EAASI,KACd,QACE,OAAO,MAITG,GACFI,EAAaU,UAGRV,EAYaW,CAClBrB,EAAiB,CAAEI,WAAUE,eAEzBgB,EAAwBhB,GAAcF,IAAaL,EAASI,KAElE,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,4BACA,CAAE,WAAYrB,IAAaL,EAASiB,WAEtCU,QAAS,kBAAMrB,EAAYN,EAASiB,WANtC,iCAWA,wBACEQ,KAAK,SACLD,UAAWE,IACT,+BACA,CAAE,WAAYrB,IAAaL,EAASmB,SAEtCQ,QAAS,kBAAMrB,EAAYN,EAASmB,SANtC,4BAWA,wBACEM,KAAK,SACLD,UAAWE,IACT,+BACA,CAAE,YAAanB,IAEjBoB,QAAS,kBAAMnB,GAAeD,IANhC,qBAWCgB,GACC,wBACEE,KAAK,SACLD,UAAU,uCACVG,QAAS,WACPrB,EAAYN,EAASI,MACrBI,GAAc,IALlB,sBAaJ,6BACGC,EAAYmB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YC5HlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1abc5b5c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n\n      case SortType.LENGTH:\n        return a.length - b.length;\n\n      case SortType.NONE:\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n  const listOfGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n  const shouldShowResetButton = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info is-rounded',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={() => setSortType(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success is-rounded',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning is-rounded',\n            { 'is-light': !isReversed },\n          )}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {shouldShowResetButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-rounded is-light\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {listOfGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}